!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("axios")):"function"==typeof define&&define.amd?define(["exports","axios"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).zrequest={},e.axios)}(this,function(e,t){"use strict";function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var r=n(t),t=(o.prototype.request=function(r){var o=this;return new Promise(function(n,t){var e;null!=(e=r.interceptors)&&e.requestInterceptor&&(r=r.interceptors.requestInterceptor(r)),o.instance.request(r).then(function(e){var t;null!=(t=r.interceptors)&&t.responseInterceptor&&(e=null==(t=r.interceptors)?void 0:t.responseInterceptor(e)),n(e)}).catch(function(e){t(e)})})},o);function o(e){this.config=e,this.interceptor=e.interceptors,this.instance=r.default.create(e),this.instance.interceptors.request.use(null==(e=this.interceptor)?void 0:e.requestInterceptor,null==(e=this.interceptor)?void 0:e.requestInterceptorErr),this.instance.interceptors.request.use(function(e){return e},function(e){return e}),this.instance.interceptors.response.use(null==(e=this.interceptor)?void 0:e.responseInterceptor,null==(e=this.interceptor)?void 0:e.responseInterceptorErr),this.instance.interceptors.response.use(function(e){return console.log("全局响应拦截器"),e.data},function(e){return e})}var s=new t({});e.default=t,e.zRequest=function(e){var t=e.method,t=void 0===t?"GET":t;return"get"!==t&&"GET"!==t||(e.params=e.data),s.request(e)},Object.defineProperty(e,"__esModule",{value:!0})});
